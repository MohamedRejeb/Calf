[versions]
agp = "8.7.3"
kotlin = "2.1.21"
compose = "1.8.0"
kotlinx-datetime = "0.6.2"
kotlinx-browser = "0.3"
nexus-publish = "2.0.0"
documentfile = "1.1.0"
jna = "5.17.0"
coil = "3.2.0"

calf = "0.8.0"

# For sample
activity-compose = "1.10.1"
navigation-compose = "2.9.0"
android-minSdk = "21"
android-compileSdk = "35"
kotlinx-coroutines = "1.10.2"
appcompat = "1.7.0"
compose-ui = "1.8.1"
android-lifecycle = "2.2.0"
play-services-location = "21.3.0"
compose-navigation = "2.9.0-beta01"
ktor = "3.1.3"

[libraries]
gradlePlugin-android = { module = "com.android.tools.build:gradle", version.ref = "agp" }
gradlePlugin-jetbrainsCompose = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose" }
gradlePlugin-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
gradlePlugin-composeCompiler = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }

kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity-compose" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
compose-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose-ui" }
compose-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-ui" }
lifecycle-extensions = { module = "androidx.lifecycle:lifecycle-extensions", version.ref = "android-lifecycle" }
play-services-location = { module = "com.google.android.gms:play-services-location", version.ref = "play-services-location" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-javafx = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-javafx", version.ref = "kotlinx-coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
nexus-publish = { module = "io.github.gradle-nexus.publish-plugin:io.github.gradle-nexus.publish-plugin.gradle.plugin", version.ref = "nexus-publish" }

coil = { module = "io.coil-kt.coil3:coil", version.ref = "coil" }

# Android
documentfile = { module = "androidx.documentfile:documentfile", version.ref = "documentfile" }

# Desktop
jna = { module = "net.java.dev.jna:jna", version.ref = "jna" }

# Wasm
kotlinx-browser = { module = "org.jetbrains.kotlinx:kotlinx-browser", version.ref = "kotlinx-browser" }

# For sample
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigation-compose" }
compose-navigation = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "compose-navigation" }

calf-ui = { module = "com.mohamedrejeb.calf:calf-ui", version.ref = "calf" }
calf-file-picker = { module = "com.mohamedrejeb.calf:calf-file-picker", version.ref = "calf" }
calf-permissions = { module = "com.mohamedrejeb.calf:calf-permissions", version.ref = "calf" }
calf-webview = { module = "com.mohamedrejeb.calf:calf-webview", version.ref = "calf" }

coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-wasm = { module = "io.ktor:ktor-client-js-wasm-js", version.ref = "ktor" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
